---
- name: Configurar balanceador NGINX + sitios + Firewall
  hosts: localhost
  gather_facts: false
  vars:
    app1_external_port: 3001
    app2_external_port: 3002
    app3_external_port: 3003
    proxy_external_port: 89
    grafana_external_port: 4000
    db_external_port: 5434
    cache_external_port: 6380

    allowed_tcp_ports:
      - "{{ proxy_external_port }}"
      - "{{ app1_external_port }}"
      - "{{ app2_external_port }}"
      - "{{ app3_external_port }}"
      - "{{ grafana_external_port }}"
      - "{{ db_external_port }}"
      - "{{ cache_external_port }}"
      - 22

    root_dir: "{{ playbook_dir }}/.."
    nginx_conf_dir: "{{ root_dir }}/volumes/nginx_config"
    proxy_container: "reverse-proxy-dev"
    proxy_html: "{{ root_dir }}/volumes/gateway"
    app1_html: "{{ root_dir }}/volumes/app1"
    app2_html: "{{ root_dir }}/volumes/app2"
    app3_html: "{{ root_dir }}/volumes/app3"

  tasks:
    - name: Crear directorios necesarios
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ nginx_conf_dir }}"
        - "{{ proxy_html }}"
        - "{{ app1_html }}"
        - "{{ app2_html }}"
        - "{{ app3_html }}"

    - name: Copiar contenido de App1
      ansible.builtin.copy:
        src: "../files/app1/index.html"
        dest: "{{ app1_html }}/index.html"
        mode: '0644'

    - name: Copiar contenido de App2
      ansible.builtin.copy:
        src: "../files/app2/index.html"
        dest: "{{ app2_html }}/index.html"
        mode: '0644'

    - name: Copiar contenido de App3
      ansible.builtin.copy:
        src: "../files/app3/index.html"
        dest: "{{ app3_html }}/index.html"
        mode: '0644'

    - name: Copiar página principal del Proxy
      ansible.builtin.copy:
        src: "../files/proxy/index.html"
        dest: "{{ proxy_html }}/index.html"
        mode: '0644'

    - name: Copiar configuración de Nginx
      ansible.builtin.copy:
        src: "{{ root_dir }}/templates/nginx.conf"
        dest: "{{ nginx_conf_dir }}/default.conf"
        mode: '0644'

    - name: Recargar configuración de Nginx
      ansible.builtin.command: >
        docker exec {{ proxy_container }} nginx -s reload
      register: reload_status
      changed_when: reload_status.rc == 0
      failed_when: false

    - name: Reiniciar contenedor del Proxy si el reload falló
      ansible.builtin.command: >
        docker restart {{ proxy_container }}
      when: reload_status.rc != 0

    - name: Instalar UFW en Ubuntu/Debian
      ansible.builtin.apt:
        name: ufw
        state: present
        update_cache: true

    - name: Política por defecto (deny incoming / allow outgoing)
      community.general.ufw:
        state: enabled
        policy: deny
        direction: incoming

    - name: Permitir salida explícitamente
      community.general.ufw:
        direction: outgoing
        policy: allow

    - name: Permitir puertos del laboratorio (DEV)
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop: "{{ allowed_tcp_ports }}"

    - name: Habilitar logging bajo
      ansible.builtin.command: ufw logging on

    - name: Asegurar UFW habilitado
      community.general.ufw:
        state: enabled

    - name: Mostrar estado de UFW (evidencia)
      ansible.builtin.command: ufw status verbose
      register: ufw_status
      changed_when: false

    - name: Imprimir estado
      ansible.builtin.debug:
        var: ufw_status.stdout
